plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.lzp.extlinkdo'
    compileSdk 33

    defaultConfig {
        applicationId "com.lzp.extlinkdo"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "versionCode" // 定义 flavor 维度

    productFlavors {
        serverpoint {
            applicationId  = "com.lzp.extlinkdo"
            buildConfigField "int", "linktype", "1"
        }
        clientpoint {
            applicationId  = "com.lzp.extlinkdo"
            buildConfigField "int", "linktype", "2"
        }

        productFlavors.all {
             //遍历productFlavors多渠道，设置渠道号（serverpoint 、clientpoint）
            flavor -> flavor.manifestPlaceholders.put("CHANNEL", name)
        }
    }

    applicationVariants.all { variant ->
        // 打包完成后输出路径
        def name = ((project.name != "app") ? project.name : rootProject.name.replace(" ", "")) +
                "_" + variant.flavorName +
                "_" + variant.buildType.name +
                "_" + variant.versionName +
                "_" + new Date().format('yyyyMMddhhmm') + ".apk"
        //相对路径app/build/outputs/apk/huawei/release/
        def path = "app/build/outputs/apk/" //相当于路径 app/apk/
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //指定路径输出
                output.outputFileName = new File(path, name)
            }
        }
        // 在打包完成后还可以做一些别的操作，可以复制到指定目录，或者移动文件到指定目录
//        variant.assemble.doLast {
//            File out = new File("${project.rootDir}/apk")
//            variant.outputs.forEach { file ->
//                //复制apk到指定文件夹
//                //copy {
//                //	from file.outputFile
//                //	into out
//                //}
//                //把文件移动到指定文件夹
//                ant.move file: file.outputFile,
//                        todir: "${project.rootDir}/apk"
//            }
//        }
    }

    signingConfigs {

        // 添加更多的 signingConfigs
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api project(path: ':link')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation 'com.google.code.gson:gson:2.8.8' // 使用最新版本

}